# import * from './generated/prisma.graphql';

type Toast {
  message: String
  error: String
}

type Mutation {
  createUser(name: String!, email: String!, password: String!): User!
  createSong(title: String!, description: String!, image: String!, song: String!, tags: [String]): Song!
  login(email: String!, password: String!): User!
  logout: Toast
  requestReset(email: String!): Toast
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
  toast(message: String, error: String): Toast
  uploadAvatar(avatar: String!, where: UserWhereUniqueInput!): User!
}

type Query {
  user(where: UserWhereUniqueInput!): User
  users: [User]!
  usersConnection(where: UserWhereInput): UserConnection!
  currentUser: User
  song(where: SongWhereUniqueInput!): Song
  songs(where: SongWhereInput, orderBy: SongOrderByInput, skip: Int, first: Int): [Song]!
  songsConnection(where: SongWhereInput): SongConnection!
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  songs(where: SongWhereInput, orderBy: SongOrderByInput, skip: Int, first: Int): [Song]!
  avatar: String!
  # friendsConnection(
  #   first: Int,
  #   after: String,
  #   last: Int,
  #   before: String
  # ): UserFriendsConnection
}
